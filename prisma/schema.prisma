// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  name        String      
  email       String      @unique
  password    String
  role        Role        @default(USER)
  accounts    Account[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Account {
  id            Int             @id @default(autoincrement())
  userId        Int
  user          User            @relation(fields: [userId], references: [id])
  name          String
  balance       Float           @default(0)
  transactions  Transaction[]
  fromTransfers Transaction[]   @relation("fromAccount")
  toTransfers   Transaction[]   @relation("toAccount")
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Transaction {
  id              Int             @id @default(autoincrement())
  accountsId      Int
  amount          Float           @default(0)
  fromAccountId   Int?
  toAccountId     Int?

  accounts        Account         @relation(fields: [accountsId], references: [id])
  fromAccount     Account?        @relation("fromAccount", fields: [fromAccountId], references: [id])
  toAccount       Account?        @relation("toAccount", fields: [toAccountId], references: [id])

  Type            TransactionType
  description     String?
  createdAt       DateTime        @default(now())
}

enum Role {
  ADMIN
  USER
}

enum TransactionType {
  DEPOSIT
  WITHDRAW
  TRANSFER
}